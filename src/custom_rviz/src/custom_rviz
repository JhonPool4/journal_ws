#!/usr/bin/env python3

# ROS libraries and messages
import os

# PyQT libraries
import sys
import numpy as np

try:
    from rviz import bindings as rviz
except:
    import rviz 

from PyQt5.QtGui import *
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *

dir_name = os.path.dirname(__file__)

class RvizCamera():
    def __init__(self, camera_id):
        self.frame = rviz.VisualizationFrame() # Main container widget of the regular RViz application
        self.frame.setSplashPath("")           # Path to the image shown during loading
        self.frame.initialize()                # Instantiate the VisualizationManager, RViz central class

        # Read config file data into config object
        reader = rviz.YamlConfigReader()
        config = rviz.Config()
        reader.readFile(config, os.path.join(dir_name, "../config/journal_views_dataset.rviz"))

        # VisualizationFrame reads data from config
        self.frame.load(config)

        # Disable the menu bar, status bar, and "hide-docks" buttons
        self.frame.setMenuBar(None)
        self.frame.setStatusBar(None)
        self.frame.setHideButtonVisibility(False)

        # Return the VisualizationManager instance, required to make changes in RViz
        self.manager = self.frame.getManager()
        view_man = self.manager.getViewManager()
        view_man.setCurrentFrom(view_man.getViewAt(camera_id))
        
        
class MainWindow(QWidget):
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)

        # App main configuration: title and size
        self.title = 'Journal: Custom RViz'
        self.sg = QDesktopWidget().screenGeometry()
        self.setWindowTitle(self.title)
        self.setGeometry(0, 0, np.round(self.sg.width()*1/4), self.sg.height())

        # App description: widgets and layouts
        self.setLayout(QHBoxLayout())
        self.rviz_layout = QVBoxLayout()

        self.layout().addLayout(self.rviz_layout,1)
        
        # configuration of RViz cameras
        cam0 = RvizCamera(camera_id=0)
        cam1 = RvizCamera(camera_id=1) 
        self.rviz_layout.addWidget(cam0.frame)
        self.rviz_layout.addWidget(cam1.frame)

                


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = MainWindow()
    ex.show()
    sys.exit(app.exec_())
