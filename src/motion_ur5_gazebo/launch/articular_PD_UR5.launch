<?xml version="1.0"?>
<!-- 
    @Info el efector final del robot UR5 se mueve siguiendo una trayectoria circular
          con ley de control PD  
-->

<!-- Simulation configuration -->
<launch>
  <arg name="limited" default="true" />
  <arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
  <arg name="paused" default="true"/>
  <arg name="gui" default="true"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find motion_ur5_gazebo)/worlds/journal_world.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- Robot UR5 -->  
  <!-- send robot urdf to param server -->
  <include file="$(find ur5_description)/launch/ur5_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
    <arg name="transmission_hw_interface" value="$(arg transmission_hw_interface)"/>	
  </include>

  <!-- Robot state publisher --> <!-- Convert joint states to /tf tranforms -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="125" />
    <param name="tf_prefix" type="string" value="" />
  </node>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find motion_ur5_gazebo)/config/my_controllers.yaml" command="load"/>
    
  <!-- load the controllers -->
  <node name="spawner_my_controller" pkg="controller_manager" type="spawner" respawn="false"
  output="screen" args="joint_state_controller
                        PD_controller"/>

  <!-- Send joint configuration -->
  <node type="send_joint_configuration" pkg="motion_ur5_gazebo" name="send_circ_trajectory_points" output="screen"/>  
 }<!--
  <node type="save_data_trajectory" pkg="motion_ur5_gazebo" name="save_data_trajectory" output="screen"/>-->
</launch>





























